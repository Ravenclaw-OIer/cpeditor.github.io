[{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/file/","title":"File"},{"body":"Choose a version in the Releases, then download your binary.\nWindows Setup Version  The setup version needs to be installed on your machine. The setting files will be stored in the config directory on your system, and it will be visible in the list of installed programs on your system.\n Download the setup.exe in the assets and install it.\nPortable Version  The portable version can be executed without installation. The setting files will be stored in the same directory as the executable file, and you won\u0026rsquo;t see it in the list of installed programs on your system.\n Download the portable.zip in the assets and unzip it to any directory you like.\nLinux Download the AppImage in the assets, add execute permission to it (chmod +x \u0026lt;AppImagePath\u0026gt;), then run it.\nMacOS Download the .dmg file in the assets and install it.\nYou may need to click \u0026ldquo;Yes\u0026rdquo; to access Filesystem several times. Apple may report that this application does not comes from recognised developer and prevent you from launching app. Please add an exception to the Editor from Settings -\u0026gt; Security -\u0026gt; General, and allow CP Editor to run anyways\n","excerpt":"Choose a version in the Releases, then download your binary.\nWindows Setup Version  The setup …","ref":"/docs/installation/install-from-binaries/","title":"Install from binaries"},{"body":"","excerpt":"","ref":"/docs/installation/","title":"Installation"},{"body":"","excerpt":"","ref":"/docs/components/main-window/","title":"Main Window"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/","title":"Menu Bar"},{"body":"  Clone this repo and submodules:\ngit clone --recurse-submodules https://github.com/cpeditor/cpeditor.git cd cpeditor   Install Qt (5.14 or higher), CMake (3.12 or higher) and Python3.\n On some Linux distributions and MacOS, you can install from your package manager. For example, sudo pacman -S qt5 on Arch Linux, brew install qt5 on Mac OS. You can also download the offline installer, or download from the mirrors. The path from the root of the mirror should be like /qt/official_releases/qt/5.14/5.14.2/qt-opensource-\u0026lt;platform\u0026gt;-5.14.2.\u0026lt;suffix\u0026gt; (or other versions). You can also use aqtinstall to install Qt.    If CMake can\u0026rsquo;t find the Qt installation path, you should set environment variable: CMAKE_PREFIX_PATH=%QtPath%/%QtVersion%/%Compiler%/lib/cmake. For example, on Mac, you can run something like export CMAKE_PREFIX_PATH=\u0026quot;/usr/local/Cellar/qt/5.14.2\u0026quot;.\n  Run the following commands:\n  Linux/MacOS:\nmkdir build cd build cmake .. -DCMAKE_BUILD_TYPE=Release cmake --build .   Windows:\nmkdir build cd build cmake .. cmake --build . --config Release     On Linux, you will get build/cpeditor.\nOn Mac, you will get build/cpeditor.app.\nOn Windows, you will get build/cpeditor.exe, or build/Release/cpeditor.exe. You may need to gather the necessary DLLs. If you have installed CP Editor by a setup.exe, you can copy the DLLs from where CP Editor is installed (or copy the executable file to the installation path).\n","excerpt":"Clone this repo and submodules:\ngit clone --recurse-submodules …","ref":"/docs/installation/build-from-source/","title":"Build from source"},{"body":"","excerpt":"","ref":"/docs/","title":"Documentation"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/edit/","title":"Edit"},{"body":"","excerpt":"","ref":"/blog/news/","title":"News About CP Editor"},{"body":"","excerpt":"","ref":"/docs/components/preferences/","title":"Preferences"},{"body":"","excerpt":"","ref":"/blog/releases/","title":"New Releases"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/actions/","title":"Actinos"},{"body":"","excerpt":"","ref":"/docs/components/main-window/code-editor/","title":"Code Editor"},{"body":"Set Compile and Run Commands You need to install g++ / python / java depending on which language you are using. You need to add them to system PATH to have them found by the editor.\nThen you can set the Compile and Run Commands in the preferences. For example, you can set C++ Commands in Preferences-\u0026gt;Languages-\u0026gt;C++-\u0026gt;C++ Commands.\nSetup CF Tool In order to submit Codeforces problems in CP Editor, you need to install CF Tool.\nYou can add it to your system PATH to use it directly, or you can set the path to it in Preferences-\u0026gt;Extensions-\u0026gt;CF Tool.\nYou need to configure the tool by the command cf config before using it.\nInstall Competitive Companion Competitive Companion is a web extension that can parse sample test cases from Online Judges.\nAfter you install it, you can parse sample test cases just by a click, instead of copying them manually.\nChange UI Language Now CP Editor is available in multiple languages, including English and Chinese.\nYou can change the UI language in Preferences-\u0026gt;Appearance. Note that you need to restart the editor to apply the change.\nSetup Clang Format The editor uses Clang Format to format your C++ code.\nYou need to add it to your system PATH, or set the path to it at Preferences-\u0026gt;Extensions-\u0026gt;Clang Format.\n","excerpt":"Set Compile and Run Commands You need to install g++ / python / java depending on which language you …","ref":"/docs/setup/","title":"Setup"},{"body":"","excerpt":"","ref":"/docs/components/main-window/tab-bar/","title":"Tab Bar"},{"body":"If you want to use the latest version (even later than the beta release), but don\u0026rsquo;t want to build from source, you can download Artifacts from GitHub Actions.\nHowever, it\u0026rsquo;s not recommended to use Artifacts, they are more unstable than beta releases, and may be a work in progress. You should read the commit logs and even the source codes before using Artifacts.\nIn order to run it on Windows/MacOS, you should install from Releases first (usually any version is OK, unless something like DLL missing happens). On Windows, replace cpeditor.exe in your install folder with the Artifact. On Mac, run cp path/to/Artifact cpeditor.app/Contents/MacOs, where cpeditor.app is the one already installed on your machine.\nIn order to run it on Ubuntu 18.04, you need to install Qt. Other Linux distributions may not support binaries compiled on Ubuntu 18.04.\n","excerpt":"If you want to use the latest version (even later than the beta release), but don\u0026rsquo;t want to …","ref":"/docs/installation/use-artifacts/","title":"Use Artifacts"},{"body":"This method is only for Arch Linux (or other distros based on Arch Linux, including Manjaro) users.\nThere are two AUR packages for CP Editor: cpeditor for the stable version and cpeditor-git for the alpha version.\nJust like installing other packages from AUR, you need an AUR helper, if you don\u0026rsquo;t have one, you can install yay by sudo pacman -S yay.\nThen, run either yay -S cpeditor or yay -S cpeditor-git, choose the default options, and wait until the build finishes.\nAfter the installation, you\u0026rsquo;ll be able to run CP Editor by cpeditor in your terminal or launch from Menu like other apps.\n","excerpt":"This method is only for Arch Linux (or other distros based on Arch Linux, including Manjaro) users. …","ref":"/docs/installation/build-from-aur/","title":"Build from AUR"},{"body":"","excerpt":"","ref":"/docs/features/","title":"Features"},{"body":"","excerpt":"","ref":"/docs/components/main-window/message-logger/","title":"Message Logger"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/view/","title":"View"},{"body":"","excerpt":"","ref":"/docs/components/","title":"Components"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/options/","title":"Options"},{"body":"","excerpt":"","ref":"/docs/components/main-window/test-cases/","title":"Test Cases"},{"body":"","excerpt":"","ref":"/docs/components/main-window/menu-bar/help/","title":"Help"},{"body":"","excerpt":"","ref":"/docs/source-code/","title":"Source Code"},{"body":" I get DLL Missing error when launching the application?  Please download Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019.   How to use whole-application dark theme?  Now you can use whole-application dark theme on KDE, macOS and Windows 10. You need to set the system theme to dark theme, then CP Editor will use dark theme, too.   How to fetch testcases from the websites?  You have to install Competitive Companion on your browser, and use it on the website while CP Editor is running.   How to submit to CF inside the editor?  You have to either parse the problem from Competitive Companion, or set the problem URL in the right-click menu of the tabs. Then you\u0026rsquo;ll see the submit button.   I am using it on Codeforces but the submit button is not clickable.  It\u0026rsquo;s because the editor can\u0026rsquo;t run the cf command. Please make sure it\u0026rsquo;s in the PATH or set the path to it in the Preferences.   When I click the Submit button, I get some message saying template is required?  cf tool requires you to configure it before you use it. Please run cf config to set the username \u0026amp; password and add a template.   I got an invalid payload when parsing sample testcases?  Please try restarting the browser and the editor. It\u0026rsquo;s known that there are few people always fail on this even after restarting, and Firefox is more stable than Google Chrome. We\u0026rsquo;re really sorry if it always fails, you can change a browser as for now, we will try our best to investigate it.   How to enable error linting in the code editor?  You need to install a Language Server program and set the settings in Preferences -\u0026gt; Extensions -\u0026gt; Language Server. You can learn about more details here.    ","excerpt":"I get DLL Missing error when launching the application?  Please download Microsoft Visual C++ …","ref":"/docs/faq/","title":"FAQ"},{"body":"Welcome! You are here to help CP Editor? Awesome, feel free and read the following sections in order to know how to work on something and where to get help from. Your contribution matters a lot, CP Editor is getting better and better because of people like you.\nWhat kinds of contributions are we looking for?  If you like CP Editor, star this project and share it with your friends. Report bugs or request new features by opening issues. Please follow the issue templates and provide detailed information, this will help the developers to find the reason of the bug and understand what feature you are requesting for exactly. Help other people in issues/pull requests/Telegram group/other platforms if you are able to help them. Write tutorials and blogs on how to use CP Editor. Improve documentation, including the Markdown files and the comments in the codes. Write codes for new features or bug fixes.  Your First Contribution Working on your first Pull Request? You can learn how from this free series How to Contribute to an Open Source Project on GitHub. Basically, you have to fork this repository, write codes on your fork, open a pull request when you are finished, wait for reviews and apply suggestions from the maintainers.\nFirst time to developing? There\u0026rsquo;s a big difference between developing and competitive programming, but it\u0026rsquo;s not hard. The first thing you should know is Object-Oriented Programming. Basically, you need to know how classes work in C++, and you should know it\u0026rsquo;s a rule to put the class definitions in the .hpp files, and put the implementation of the functions in the .cpp files. The source code of the CP Editor is a good example. Google for what you want to implement is usually helpful. Copy and modify the source codes if you want to implement something similar to an existing feature. If you are looking for an IDE for developing, VS Code is probably a good choice.\nFirst time to Qt? Don\u0026rsquo;t be afraid, Qt is not hard to get started. You have to install Qt\u0026gt;=5.14 and CMake\u0026gt;=3.5 first. Linux users may install them using the package manager on your system. Windows users may download Qt here and it\u0026rsquo;s recommended to use Visual Studio and install the CMake plugin. Read the build from source section to learn how to build. Read the Qt docs on how to use Qt built-in widgets, how to design the UI and how to use the signals and slots. Usually, you don\u0026rsquo;t need anything from the std namespace, for example, use QString instead of std::string.\nDon\u0026rsquo;t know where to start? You can start by looking through the issues and find one you are interested in. The good first issues may be suitable for you. Ask in the Telegram group or under the issues if you have any questions.\nBefore Writing Codes Please open an issue (describe the feature/bug like normal issues, and say that you are going to work on it, probably with a draft on how you would like to implement it) before writing codes for a pull request, for these reasons:\n You may get help from others. Others can know you are working on it, this will save possible duplicate works. You will be notified if this feature is not going to be accepted, or the \u0026ldquo;bug\u0026rdquo; is actually not a bug, etc., thus saving your time.  Contributing rules  Remember that the goal is to build an editor for competitive programmers, not for developers. Do one thing in a pull request. If you want to add multiple features/fix multiple bugs and they are not relevant, open multiple pull requests. You may need to create multiple branches to open multiple pull requests, you can learn git branching here. Add new features on the master branch, and fix bug on the latest active (master, beta and stable) branch which has the bug. Please write clear commit messages. It\u0026rsquo;s also recommended to write Conventional Commits. You can use commitizen/cz-cli to write commit messages. However, the rules are optional, the key is that, others and yourself in the future should understand what has been changed and why these changes are made. Use Clang Format 9 (use clang-format --version to check your version, you may need to set the clang-format binary path for your IDE, for example, the default version of clang-format in VS Code may be clang-format-6) and .clang-format in the root directory to format your codes. Don\u0026rsquo;t remove features unless it\u0026rsquo;s necessary. Add an option to disable some feature instead. Keep the settings file backward compatible all the time. Windows, Linux and Mac OS should be supported. Both light/dark system themes should be supported. Everyone should obey the Code of Conduct in order to build a harassment-free community.  FAQ   Can I do it well if I\u0026rsquo;ve just started?\n Everyone knows nothing at the beginning. Don\u0026rsquo;t worry, our cool contributors will help you when you meet difficulties. If you :heart: open source and keep trying, everything will be better and better.    Do I need to learn about CMake?\n No, you only need to know how to build from source.    How to add a setting?\n You only have to edit settings.json and PreferencesWindow.cpp. You can refer to other settings.    Some files are missing when compiling.\n  If the CI tests are passed, it\u0026rsquo;s probably because the submodules are updated. You can run the following commands:\ngit add . git reset --hard git submodule update --init You can also try git rm all submodules and then init them again, or even delete the repo on your disk and clone again.\n    ","excerpt":"Welcome! You are here to help CP Editor? Awesome, feel free and read the following sections in order …","ref":"/docs/contribution-guidelines/","title":"Contribution Guidelines"},{"body":"CP Editor v6.4\n","excerpt":"CP Editor v6.4","ref":"/blog/2020/04/28/cp-editor-v6.4/","title":"CP Editor v6.4"},{"body":"Language Server\n","excerpt":"Language Server","ref":"/blog/2020/04/28/use-language-server-in-cp-editor/","title":"Use Language Server in CP Editor"},{"body":"  #td-cover-block-0 { background-image: url(/about/featured-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_725403_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/about/featured-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_725403_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About CP Editor An IDE specially designed for competitive programming        CP Editor is a Qt-based, lightweight and cross-platform IDE specially designed for competitive programming.\nIt\u0026rsquo;s free software distributed under GPL-3.0. The source code is available on GitHub.\n    You can:\nLearn about the Features Download and have a try Read the Documentation Join the Community      This website is built by Hugo with the Docsy theme.\nThe home page is based on the Colorlib template.\n   ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/about/","title":"About CP Editor"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","excerpt":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will …","ref":"/blog/","title":"CP Editor Blog"},{"body":"","excerpt":"","ref":"/community/","title":"Community"},{"body":"","excerpt":"","ref":"/zh/","title":"CP Editor"},{"body":" The Missing Editor for Competitive Programmers CP Editor is specially designed for competitive programming. It helps you focus on your algorithms and automates compilation, execution and testing of your code. It even fetches test cases for you from different platforms and submits solutions to Codeforces!\nView source Download         How it works for you CP Editor eliminates all the repetitive and boring tasks during algorithmic contests. It automates all that's reasonably possible and allows you to purely focus on your code.\n  Fetch testcases CP Editor can fetch testcases automatically from almost all competitive programming sites. Say bye to error-prone copy-pasting.\n   Code faster Code faster with its amazing customizable code snippets. In just two seconds you can insert a whole DFS code into your editor.\n   Get verdicts You can get verdicts for your sample testcases in one click by built-in checkers or checkers from testlib. You can also add your own checkers.\n     Run without Saving  Variety of Themes  Code Linting  Submit to Codeforces   Run any code\nAt any time We know that you want to test something without a temp file You can run your code in one click without saving and the hot exit feature makes it easy to restore your code from the last session.\nGet Started Now       Dark themes? We've got you covered Our lives are colorful, why not our coding editor We have added five different themes for you to choose from: Light, Drakula, Monkai, Solarized Light and Solarized Dark. If that does not satisfy you, ask us on our community pages and we will provide you more.\nGet Started Now       Errors and Warnings?\nWe lint them while you are coding Save your precious contest time with code linting Using Language Servers, we provide real-time linting for errors and warnings in your code, just like Intellisense in VSCode and Atom. You can see squiggles under the warnings and hover over them to get tooltips.\nGet Started Now       We can submit your Solutions to Codeforces All thanks to Competitive Programming Community We have gathered the best tools in competitive programming and merged them into one editor. One such tool is called CF Tool. We have added it so you can submit and get verdicts in the editor.\nGet Started Now           Unique Screens that work perfectly  We have made a simple yet powerful UI that shouldn't confuse you when solving problems Everything you need is always in front of your eyes\n   Feedback from Community Our Community support us and keep us alive. We would love to hear your feedback too!\nSee what other Competitive Programmers have to say about our editor\n  I can definitely say this is what I was looking for as a competitive programmer. Light-weight, very simple to use and best part is that compilation is fast, really helpful in competitions.\nSimran Gujrati            Easy to use and lightweight. It's very fast in terms of compiling and also provides the feature to parse testcases from competitive websites. It is the best editor I have ever used.\nYatharth Varma            This is exactly what I was looking for. An Editor that automates all redundant tasks and helps me in focusing on the Algorithm. Give a try, you are gonna love me.\nNitish Kumar Singh                Full support for\nC/C++, Java and Python Use the language you like We officially support three languages in the editor. You can set your own compilation commands and pass runtime arguments to your code. It really gets exciting when you have the opportunity to use different languages in different tabs with one-click options.\nGet Started Now       Impressed by our features? We are excited that you have chosen to try out this editor. We hope that our Editor will fulfill all your needs in Competitive Programming. CP Editor is, \"by competitive programmers, to competitive programmers, for competitive programmers\".\nTry it now        ","excerpt":"The Missing Editor for Competitive Programmers CP Editor is specially designed for competitive …","ref":"/","title":"CP Editor"},{"body":"    [v-cloak] { display: none; }  Get CP Editor on your machine and have a try! You probably want to use the latest stable version on {{ userPlatform }} .    Choose your platform and the version you want to download Install instructions All versions    Loading... No available asset found Platform {{ platformOption }}   Version {{ asset.name }} (Latest Stable) (Latest Beta)      Download     ","excerpt":"    [v-cloak] { display: none; }  Get CP Editor on your machine and have a try! You probably want to …","ref":"/download/","title":"Download CP Editor"}]