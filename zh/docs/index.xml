<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CP Editor – 文档</title><link>/zh/docs/</link><description>Recent content in 文档 on CP Editor</description><generator>Hugo -- gohugo.io</generator><atom:link href="/zh/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Code Edit</title><link>/zh/docs/preferences/code-edit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/code-edit/</guid><description>
&lt;h3 id="tab-width">Tab Width&lt;/h3>
&lt;p>The width (number of characters) of an indent. It is used when displaying the tab characters. It is also used in &lt;a href="#auto-indent">Auto Indent&lt;/a> and &lt;a href="#replace-tabs-by-spaces">Replace tabs by spaces&lt;/a>.&lt;/p>
&lt;h3 id="auto-indent">Auto Indent&lt;/h3>
&lt;ol>
&lt;li>When you start a new line, the new line will have the same indent (i.e. white spaces at the beginning of the line) as the old line.&lt;/li>
&lt;li>If the old line ends with &lt;code>{&lt;/code>, an extra indent (a tab character or &lt;a href="#tab-width">Tab Width&lt;/a> spaces, depending on whether &lt;a href="#replace-tabs-by-spaces">Replace tabs by spaces&lt;/a> is enabled) will be inserted at the beginning of the new line.&lt;/li>
&lt;/ol>
&lt;h3 id="wrap-text">Wrap Text&lt;/h3>
&lt;p>If a line is too long to fit in a single line, the line will be separated into several lines.&lt;/p>
&lt;h3 id="auto-complete-parentheses">Auto Complete Parentheses&lt;/h3>
&lt;p>Automatically add the right parenthesis when you type the left one. For example, when you type &lt;code>(&lt;/code>, &lt;code>)&lt;/code> will be added.&lt;/p>
&lt;p>When the character next to the cursor is a right parenthesis and you type this parenthesis, instead of typing this parenthesis, the cursor will jump out of the parenthesis.&lt;/p>
&lt;p>You can choose the parentheses to auto-complete in the &lt;a href="../language#parentheses">Parentheses&lt;/a> settings.&lt;/p>
&lt;h3 id="auto-remove-parentheses">Auto Remove Parentheses&lt;/h3>
&lt;p>When you delete a left parenthesis, if a corresponding right parenthesis is next to it, the right parenthesis will also be deleted.&lt;/p>
&lt;p>You can choose the parentheses to auto-remove in the &lt;a href="../language#parentheses">Parentheses&lt;/a> settings.&lt;/p>
&lt;h3 id="jump-out-of-a-parenthesis-by-pressing-tab">Jump out of a parenthesis by pressing Tab&lt;/h3>
&lt;p>When the cursor is next to a right parenthesis, you can use the Tab key to jump out of it. If &lt;a href="#auto-complete-parentheses">Auto Complete Parentheses&lt;/a> is enabled, this is an alternative of typing the right parenthesis.&lt;/p>
&lt;p>You can choose the parentheses to jump out by Tab in the &lt;a href="../language#parentheses">Parentheses&lt;/a> settings.&lt;/p>
&lt;h3 id="replace-tabs-by-spaces">Replace tabs by spaces&lt;/h3>
&lt;p>When you insert an indent, insert spaces instead of a tab character. The number of spaces is equal to the &lt;a href="#tab-width">Tab Width&lt;/a>.&lt;/p>
&lt;p>Note that this won&amp;rsquo;t replace the existing tab characters. In &lt;a href="#auto-indent">Auto Indent&lt;/a>, the tab characters in the old line will remain in the new line (however, the new indent inserted after &lt;code>{&lt;/code> will be spaces).&lt;/p></description></item><item><title>Docs: Language</title><link>/zh/docs/preferences/language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/language/</guid><description>
&lt;h2 id="general">General&lt;/h2>
&lt;h3 id="default-language">Default Language&lt;/h3>
&lt;p>The default programming language. It&amp;rsquo;s used when opening a new tab and some other places.&lt;/p>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;h3 id="c-commands">C++ Commands&lt;/h3>
&lt;h4 id="c-compile-command">C++ Compile Command&lt;/h4>
&lt;p>The compilation command for C++. For example: &lt;code>g++ -Wall&lt;/code>.&lt;/p>
&lt;p>The command shouldn&amp;rsquo;t contain the source file and the output file, CP Editor automatically adds them.&lt;/p>
&lt;p>For compilation flags, please refer to the manual of the compiler. For example, you may want to add &lt;code>-std=c++14&lt;/code> in the compile command to use C++14.&lt;/p>
&lt;h4 id="c-executable-file-path">C++ Executable File Path&lt;/h4>
&lt;p>The path of the executable file, i.e. the argument of the &lt;code>-o&lt;/code> option of the compiler.&lt;/p>
&lt;p>If this path is a relative path, then it&amp;rsquo;s relative to the source file (if it&amp;rsquo;s an untitled tab, then relative to the &lt;a href="../general#temporary-directory">Temporary Directory&lt;/a>).&lt;/p>
&lt;p>You can use some place holders for this setting:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${filename}&lt;/code>: The complete name of the source file. If it&amp;rsquo;s an untitled tab (i.e. an unsaved file), the complete file name is &lt;code>sol.cpp&lt;/code>.&lt;/li>
&lt;li>&lt;code>${basename}&lt;/code>: &lt;code>${filename}&lt;/code> without the suffix (i.e. without &lt;code>.cpp&lt;/code>, etc.).&lt;/li>
&lt;li>&lt;code>${tmpdir}&lt;/code> or &lt;code>${tempdir}&lt;/code>: The path of the &lt;a href="../general#temporary-directory">Temporary Directory&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>For example, you can use &lt;code>${tmpdir}/${basename}&lt;/code> if you don&amp;rsquo;t want to keep the executable files, or &lt;code>executables/${basename}&lt;/code> if you want to keep all executable files in the &lt;code>executables&lt;/code> directory in the parent directory of the source file.&lt;/p>
&lt;h4 id="c-run-arguments">C++ Run Arguments&lt;/h4>
&lt;p>The arguments passed to the program when executing it. It&amp;rsquo;s usually not needed in competitive programming.&lt;/p>
&lt;h4 id="c-compiler-output-codec">C++ Compiler Output Codec&lt;/h4>
&lt;p>The text codec of the compiler output (warnings, errors, etc.), used to display the messages from the compiler in CP Editor.&lt;/p>
&lt;p>It could be useful if you are using locales for your compiler and the compiler messages are not English.&lt;/p>
&lt;h3 id="java-commands">Java Commands&lt;/h3>
&lt;h4 id="java-compile-command">Java Compile Command&lt;/h4>
&lt;p>The compilation command for Java. For example: &lt;code>javac&lt;/code>.&lt;/p>
&lt;p>The command shouldn&amp;rsquo;t contain the source file and the class path, CP Editor automatically adds them.&lt;/p>
&lt;h4 id="java-class-path">Java Class Path&lt;/h4>
&lt;p>The path to save the class files.&lt;/p>
&lt;p>Please refer to &lt;a href="#c-executable-file-path">C++ Executable File Path&lt;/a> for the details.&lt;/p>
&lt;h4 id="java-class-name">Java Class Name&lt;/h4>
&lt;p>The name of the main class of your solution.&lt;/p>
&lt;p>You can use arbitary name for your source file. When compiling, CP Editor automatically saves your code to a file with the class name.&lt;/p>
&lt;h4 id="java-run-command">Java Run Command&lt;/h4>
&lt;p>The command to run your solution. For example: &lt;code>java&lt;/code>.&lt;/p>
&lt;p>This command shouldn&amp;rsquo;t contain the class path or the class name, CP Editor automatically adds them.&lt;/p>
&lt;h4 id="java-run-arguments">Java Run Arguments&lt;/h4>
&lt;p>The arguments passed to the program when executing it. It&amp;rsquo;s usually not needed in competitive programming.&lt;/p>
&lt;h4 id="java-compiler-output-codec">Java Compiler Output Codec&lt;/h4>
&lt;p>Please refer to &lt;a href="#c-compiler-output-codec">C++ Compiler Output Codec&lt;/a>.&lt;/p>
&lt;h3 id="python-commands">Python Commands&lt;/h3>
&lt;h4 id="python-run-command">Python Run Command&lt;/h4>
&lt;p>The command to run a python code. It&amp;rsquo;s usually one of &lt;code>python&lt;/code>/&lt;code>python2&lt;/code>/&lt;code>python3&lt;/code>.&lt;/p>
&lt;h4 id="python-run-arguments">Python Run Arguments&lt;/h4>
&lt;p>The arguments passed to the program when executing it. It&amp;rsquo;s usually not needed in competitive programming.&lt;/p>
&lt;h2 id="template">Template&lt;/h2>
&lt;p>The code template is a file. When opening a new tab, the content of the template will be the initial content in the code editor.&lt;/p>
&lt;h3 id="template-path">Template Path&lt;/h3>
&lt;p>The path to the code template.&lt;/p>
&lt;h3 id="template-cursor-position">Template Cursor Position&lt;/h3>
&lt;p>The initial position of the text cursor when opening the template.&lt;/p>
&lt;p>It contains three parts:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../general#regular-expression">Regex&lt;/a>&lt;/li>
&lt;li>Offset type: start or end.&lt;/li>
&lt;li>Offset characters: a number, could be negative.&lt;/li>
&lt;/ol>
&lt;p>It works as below:&lt;/p>
&lt;ol>
&lt;li>Find the first match of the regex in the template.&lt;/li>
&lt;li>If nothing matches the regex, the cursor will be at the end of the template.&lt;/li>
&lt;li>Otherwise, depending on the offset type, the cursor will be at the start/end of the first match, and then moved to the right by the number of the offset characters.&lt;/li>
&lt;/ol>
&lt;p>For example, if your template contains the following snippet:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can use &lt;code>int main&lt;/code> as the regex, &lt;code>end&lt;/code> as the offset type, and &lt;code>9&lt;/code> as the offset characters. After that, when opening a new tab, the cursor will be at the first line in the &lt;code>main&lt;/code> function.&lt;/p>
&lt;h2 id="snippets">Snippets&lt;/h2>
&lt;h3 id="manage-snippets">Manage Snippets&lt;/h3>
&lt;p>You can add/delete/rename snippets in &amp;ldquo;Language-&amp;gt;XXX-&amp;gt;XXX Snippet&amp;rdquo;. You can use &lt;kbd>Ctrl+N&lt;/kbd> for &amp;ldquo;Add&amp;rdquo;, &lt;/kbd>Ctrl+W&lt;/kbd> for &amp;ldquo;Del&amp;rdquo; and &lt;/kbd>F2&lt;/kbd> for &amp;ldquo;Rename&amp;rdquo;.&lt;/p>
&lt;p>You can also import snippets from files or extract your snippets to files in the &amp;ldquo;More&amp;rdquo; menu in the snippet page.&lt;/p>
&lt;h3 id="use-snippets">Use Snippets&lt;/h3>
&lt;p>You can insert a snippet into the code editor by either clicking &amp;ldquo;Actions-&amp;gt;Use Snippets&amp;rdquo; or pressing &lt;/kbd>Ctrl+T&lt;/kbd>.&lt;/p>
&lt;p>When choosing a snippet, you can enter the first few characters of the snippet name, and it will be auto-completed.&lt;/p>
&lt;h2 id="parentheses">Parentheses&lt;/h2>
&lt;p>You can set the parentheses settings for each language and each parenthesis.&lt;/p>
&lt;p>Each setting has three states: enable, disable and default. If it&amp;rsquo;s default, it uses the settings in the &lt;a href="../code-edit">Code Edit&lt;/a> page. Otherwise, it overwrites the settings in the &lt;a href="../code-edit">Code Edit&lt;/a> page.&lt;/p>
&lt;h3 id="auto-complete">Auto Complete&lt;/h3>
&lt;p>See &lt;a href="../code-edit#auto-complete-parentheses">Code Edit/Auto Complete Parentheses&lt;/a>.&lt;/p>
&lt;h3 id="auto-remove">Auto Remove&lt;/h3>
&lt;p>See &lt;a href="../code-edit#auto-remove-parentheses">Code Edit/Auto Remove Parentheses&lt;/a>.&lt;/p>
&lt;h3 id="tab-jump-out">Tab Jump Out&lt;/h3>
&lt;p>See &lt;a href="../code-edit#jump-out-of-a-parenthesis-by-pressing-tab">Code Edit/Jump out of a parenthesis by pressing Tab&lt;/a>.&lt;/p></description></item><item><title>Docs: 外观</title><link>/zh/docs/preferences/appearance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/appearance/</guid><description>
&lt;h2 id="通用">通用&lt;/h2>
&lt;h3 id="界面语言-ui-language">界面语言 (UI Language)&lt;/h3>
&lt;p>UI 中使用的自然语言。&lt;/p>
&lt;h3 id="界面风格">界面风格&lt;/h3>
&lt;p>用户界面使用的样式。可用选项在不同平台上有所不同。&lt;/p>
&lt;p>“默认”样式要么是在你的平台上最合适的样式，要么是 &lt;code>--style&lt;/code> 命令行选项指定的样式。&lt;/p>
&lt;p>在 Windows 上，还有一个附加选项 “Auto Fusion”。“Auto Fusion” 是深色还是浅色取决于系统主题（即 Windows 应用程序主题是深色还是浅色）。&lt;/p>
&lt;p>更改 UI 样式后，如果有任何问题，可以尝试重新启动 CP Editor。&lt;/p>
&lt;h3 id="编辑器主题">编辑器主题&lt;/h3>
&lt;p>代码编辑器的语法高亮显示主题。&lt;/p>
&lt;h3 id="不透明度">不透明度&lt;/h3>
&lt;p>主窗口的不透明度。&lt;/p>
&lt;h3 id="测试用例最大高度">测试用例最大高度&lt;/h3>
&lt;p>滚动条出现之前测试用例的最大高度。&lt;/p>
&lt;h3 id="只显示编译并运行">只显示编译并运行&lt;/h3>
&lt;p>隐藏仅编译、仅运行这两个按钮。&lt;/p>
&lt;p>如果你不在乎编译所用的时间，或者你正在使用不需要编译的 Python，这将非常有用。&lt;/p>
&lt;h3 id="在差异查看器中显示行尾字符">在差异查看器中显示行尾字符&lt;/h3>
&lt;p>使用字符 &amp;ldquo;¶&amp;rdquo; 在差异查看器中可视化行尾。如果你要查看行尾的差异（即末尾多余的空行），这将很有用。&lt;/p>
&lt;h3 id="在代码编辑器底部添加额外的边距">在代码编辑器底部添加额外的边距&lt;/h3>
&lt;p>在代码编辑器的底部添加一个额外的边距，让你可以更少地滚动。&lt;/p>
&lt;p>由于技术原因，它可能会稍微影响操作历史记录，所以你可以通过 &lt;kbd>Ctrl+Z&lt;/kbd> 撤消页边距更改。&lt;/p>
&lt;h2 id="字体">字体&lt;/h2>
&lt;h3 id="仅显示等宽字体">仅显示等宽字体&lt;/h3>
&lt;p>在为下面的设置选择字体时只显示等宽字体。&lt;/p>
&lt;h3 id="编辑器字体">编辑器字体&lt;/h3>
&lt;p>代码编辑器的字体。&lt;/p>
&lt;h3 id="测试用例字体">测试用例字体&lt;/h3>
&lt;p>测试用例的字体。&lt;/p>
&lt;h3 id="消息字体">消息字体&lt;/h3>
&lt;p>消息的字体。&lt;/p>
&lt;h3 id="使用自定义的全局字体">使用自定义的全局字体&lt;/h3>
&lt;p>对 UI 用自定义字体（代码编辑器，测试用例，消息等除外）来替代系统字体。&lt;/p></description></item><item><title>Docs: Actions</title><link>/zh/docs/preferences/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/actions/</guid><description>
&lt;h2 id="save">Save&lt;/h2>
&lt;h3 id="save-files-faster">Save Files Faster&lt;/h3>
&lt;p>Use &lt;a href="https://doc.qt.io/qt-5/qfile.html" target="_blank">&lt;code>QFile&lt;/code>&lt;/a> instead of &lt;a href="https://doc.qt.io/qt-5/qsavefile.html" target="_blank">&lt;code>QSaveFile&lt;/code>&lt;/a> to save files.&lt;/p>
&lt;p>This is slightly unsafer but notably faster.&lt;/p>
&lt;h3 id="save-file-on-compilation">Save File On Compilation&lt;/h3>
&lt;p>Save your code when compiling it.&lt;/p>
&lt;h3 id="save-file-on-execution">Save File On Execution&lt;/h3>
&lt;p>Save your code when executing it.&lt;/p>
&lt;h3 id="save-testcases-on-save">Save Testcases on Save&lt;/h3>
&lt;p>Save the test cases on the disk when saving the code.&lt;/p>
&lt;p>You can choose where to save the test cases in &lt;a href="../file-path#testcases">File Path/Testcases&lt;/a>.&lt;/p>
&lt;h2 id="auto-save">Auto Save&lt;/h2>
&lt;h3 id="auto-save-interval-type">Auto Save Interval Type&lt;/h3>
&lt;p>It is easier to describe if we explain a little bit about the internal implementation: There is a countdown timer. When we &amp;ldquo;reset&amp;rdquo; it, it will be &amp;ldquo;running&amp;rdquo; in the next &lt;em>Auto Save Interval&lt;/em> milliseconds, and after &lt;em>Auto Save Interval&lt;/em> milliseconds, the timer will &amp;ldquo;timeout&amp;rdquo; and the code is auto-saved.&lt;/p>
&lt;h4 id="after-the-last-modification">After the last modification&lt;/h4>
&lt;p>The timer is reset every time when you modify the code. i.e. Your codes will be saved if you haven&amp;rsquo;t modified it for &lt;em>Auto Save Interval&lt;/em> milliseconds.&lt;/p>
&lt;p>This mode is suitable for a small &lt;em>Auto Save Interval&lt;/em>, so that your codes will be auto-saved every time you take a short break from typing. If the interval is too long, it&amp;rsquo;s likely that your codes will never be auto-saved.&lt;/p>
&lt;h4 id="after-the-first-modification">After the first modification&lt;/h4>
&lt;p>The timer is reset when you modify the code if the timer is not running. i.e. Your codes will be saved if you modified it &lt;em>Auto Save Interval&lt;/em> milliseconds ago.&lt;/p>
&lt;p>This mode is suitable for a long &lt;em>Auto Save Interval&lt;/em>, otherwise it&amp;rsquo;s likely that the save happens when you are typing, which could affect your typing experience.&lt;/p>
&lt;h4 id="without-modification">Without modification&lt;/h4>
&lt;p>The timer is reset every time when it timeouts. i.e. Your codes will be saved every &lt;em>Auto Save Interval&lt;/em> milliseconds, no matter you have modified it or not.&lt;/p>
&lt;p>This mode is suitable for saving test cases, etc. In the other modes, the test cases are not auto-saved if you don&amp;rsquo;t modify the codes.&lt;/p>
&lt;h2 id="detached-execution">Detached Execution&lt;/h2>
&lt;h3 id="terminal-program--terminal-arguments">Terminal Program &amp;amp; Terminal Arguments&lt;/h3>
&lt;p>This setting is only available on Linux.&lt;/p>
&lt;p>The terminal program is the name/path of the terminal emulator you want to use.&lt;/p>
&lt;p>The arguments are used to execute a given command. i.e. &lt;code>&amp;lt;Terminal Program&amp;gt; &amp;lt;Terminal Arguments&amp;gt; &amp;lt;command&amp;gt;&lt;/code> can be used to execute &lt;code>&amp;lt;command&amp;gt;&lt;/code> in the terminal emulator.&lt;/p>
&lt;p>In most terminal emulators including &lt;code>konsole&lt;/code>, &lt;code>xterm&lt;/code> and &lt;code>xfce-terminal&lt;/code>, the argument is &lt;code>-e&lt;/code>.&lt;/p>
&lt;p>In &lt;code>gnome-terminal&lt;/code>, it is &lt;code>--&lt;/code>.&lt;/p>
&lt;p>You can read the manual of your terminal emulator to get the suitable arguments.&lt;/p>
&lt;h2 id="save-session">Save Session&lt;/h2>
&lt;h3 id="restore-last-session-at-startup">Restore last session at startup&lt;/h3>
&lt;p>Save the status of the editor, and restore most status from the last session when you start CP Editor.&lt;/p>
&lt;p>You can use the &lt;code>--no-hot-exit&lt;/code> command line option to temporarily disable this, in case that the last session is too big and the application hangs.&lt;/p>
&lt;h3 id="auto-save-the-current-session-periodically">Auto-save the current session periodically&lt;/h3>
&lt;p>Save the current session periodically instead of only when exiting the application.&lt;/p>
&lt;p>This is useful if you don&amp;rsquo;t want to lose your codes after abnormal terminations, such as power outage, forced shutdown, killing CP Editor, etc. However, if the files and test cases are too large, the editor hangs each time the auto-save happens.&lt;/p>
&lt;h2 id="bind-file-and-problem">Bind file and problem&lt;/h2>
&lt;h3 id="restore-the-problem-url-when-opening-a-file">Restore the problem URL when opening a file&lt;/h3>
&lt;p>If a problem URL was set for a file, when you open that file again, the problem URL will be restored.&lt;/p>
&lt;h3 id="open-the-old-file-when-parsing-an-old-problem-url">Open the old file when parsing an old problem URL&lt;/h3>
&lt;p>If a problem URL was set for a file, when parsing that problem from Competitive Companion again, the old file will be opened.&lt;/p>
&lt;h2 id="empty-test-cases">Empty Test Cases&lt;/h2>
&lt;h3 id="run-your-codes-on-empty-test-cases">Run your codes on empty test cases&lt;/h3>
&lt;p>Run your code on all non-hidden test cases even if the input is empty.&lt;/p>
&lt;h3 id="check-your-answer-on-test-cases-with-empty-output">Check your answer on test cases with empty output&lt;/h3>
&lt;p>Check your answer even if your output or the expected output is empty.&lt;/p>
&lt;h2 id="load-external-file-changes">Load External File Changes&lt;/h2>
&lt;h3 id="auto-load-external-file-changes-if-theres-no-unsaved-modification">Auto-load external file changes if there&amp;rsquo;s no unsaved modification&lt;/h3>
&lt;p>If the file on the disk and the code in CP Editor was the same, and then the file is changed outside of CP Editor, load the external change without confirmation.&lt;/p>
&lt;h3 id="ask-whether-to-load-external-file-changes">Ask whether to load external file changes&lt;/h3>
&lt;p>If the file is changed outside of CP Editor, ask whether to load the change or not.&lt;/p>
&lt;p>If this setting is disabled, external changes won&amp;rsquo;t be loaded.&lt;/p>
&lt;p>&lt;a href="#auto-load-external-file-changes-if-theres-no-unsaved-modification">Auto-load external file changes if there&amp;rsquo;s no unsaved modification&lt;/a> overrides this setting. i.e. if &lt;a href="#auto-load-external-file-changes-if-theres-no-unsaved-modification">Auto-load external file changes if there&amp;rsquo;s no unsaved modification&lt;/a> is enabled, external file changes will be loaded without confrimation regardless of &lt;a href="#ask-whether-to-load-external-file-changes">Ask whether to load external file changes&lt;/a> ; if &lt;a href="#auto-load-external-file-changes-if-theres-no-unsaved-modification">Auto-load external file changes if there&amp;rsquo;s no unsaved modification&lt;/a> is disabled, the user will be asked whether to load the changes only when &lt;a href="#ask-whether-to-load-external-file-changes">Ask whether to load external file changes&lt;/a> is enabled, otherwise the changes won&amp;rsquo;t be loaded.&lt;/p></description></item><item><title>Docs: Extensions</title><link>/zh/docs/preferences/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/extensions/</guid><description>
&lt;h2 id="clang-format">Clang Format&lt;/h2>
&lt;p>Clang Format is used to format the C++ codes. You can click Actions-&amp;gt;Format Code or press the shortcut &lt;kbd>Ctrl+Shift+I&lt;/kbd> to format the codes. If you have selected a part of the code, only the selection (and its necessary adjacent codes) will be formatted.&lt;/p>
&lt;p>&lt;strong>See also&lt;/strong> &lt;a href="../../setup#setup-clang-format">Setup Clang Format&lt;/a>.&lt;/p>
&lt;h3 id="path">Path&lt;/h3>
&lt;p>The path to the &lt;code>clang-format&lt;/code> executable, or simply &lt;code>clang-format&lt;/code> if it&amp;rsquo;s in the &lt;code>PATH&lt;/code> environment variable.&lt;/p>
&lt;h3 id="style">Style&lt;/h3>
&lt;p>The Clang Format style. The content here is the same as the content of a &lt;code>.clang-format&lt;/code> file.&lt;/p>
&lt;p>You can read &lt;a href="https://clang.llvm.org/docs/ClangFormatStyleOptions.html" target="_blank">Clang-Format Style Options documentation&lt;/a> or search for other materials to learn how to write the styles.&lt;/p>
&lt;h2 id="language-server">Language Server&lt;/h2>
&lt;p>&lt;strong>See also&lt;/strong> &lt;a href="../../setup#setup-language-server">Setup Language Server&lt;/a>.&lt;/p>
&lt;h3 id="use-linting-with-language-server">Use Linting with Language Server&lt;/h3>
&lt;p>Use language server to lint errors, warnings, hints, etc.&lt;/p>
&lt;p>You can hover over the squiggles to see the tooltips for the explaination of the errors/warnings.&lt;/p>
&lt;h3 id="delay-in-linting">Delay in Linting&lt;/h3>
&lt;p>Update linting if you haven&amp;rsquo;t been typing for &lt;em>delay&lt;/em> milliseconds.&lt;/p>
&lt;h3 id="path-to-lsp-executable">Path to LSP executable&lt;/h3>
&lt;p>The path to the language server program, or the name if it&amp;rsquo;s in the &lt;code>PATH&lt;/code> environment variable.&lt;/p>
&lt;h3 id="arguments-for-language-server">Arguments for Language Server&lt;/h3>
&lt;p>Additional arguments for the language server program. See the documentation of the language server program you are using for more information.&lt;/p>
&lt;p>For example, if you are using &lt;code>pyls&lt;/code> for Python, you probably want to use &lt;code>python&lt;/code> as the language server program, and use &lt;code>-m pyls&lt;/code> as the arguments.&lt;/p>
&lt;h2 id="competitive-companion">Competitive Companion&lt;/h2>
&lt;p>&lt;strong>See also&lt;/strong> &lt;a href="../../setup#setup-competitive-companion">Setup Competitive Companion&lt;/a>.&lt;/p>
&lt;h3 id="open-new-tabs">Open New Tabs&lt;/h3>
&lt;p>Open a new tab when a problem is parsed.&lt;/p>
&lt;p>If this is disabled, when parsing a problem, the test cases in the current tab will be replaced by the new test cases.&lt;/p>
&lt;h3 id="connection-port">Connection Port&lt;/h3>
&lt;p>Usually, you don&amp;rsquo;t have to modify this setting. The default port &lt;code>10045&lt;/code> is supported by Competitive Companion, so if you are using the default port, you don&amp;rsquo;t have to add custom ports in Competitive Companion. However, in case of port conflicts, etc., you can change the port and add custom ports in Competitive Companion.&lt;/p>
&lt;h3 id="use-the-time-limit-from-competitive-companion">Use the time limit from Competitive Companion&lt;/h3>
&lt;p>Use the time limit parsed by Competitive Companion as the time limit of the corresponding tab.&lt;/p>
&lt;h3 id="head-comments">Head Comments&lt;/h3>
&lt;p>The head comments are added at the head of the code when parsing a problem.&lt;/p>
&lt;h4 id="content">Content&lt;/h4>
&lt;p>The content of the head comments. You can use the following place holders:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${time}&lt;/code>: The time when the problem was parsed. The time format can be set in &lt;a href="#time-format">Time format for the head comments&lt;/a>.&lt;/li>
&lt;li>&lt;code>${json.X.Y}&lt;/code>: An attribute of the data provided by Competitive Companion. You can read more about the attributes in &lt;a href="https://github.com/jmerle/competitive-companion#explanation" target="_blank">the documentation of Competitive Companion&lt;/a>. For example, &lt;code>${json.name}&lt;/code> is the name of the problem.&lt;/li>
&lt;/ul>
&lt;h4 id="time-format">Time Format&lt;/h4>
&lt;p>The format of the &lt;code>${time}&lt;/code> place holder in the head comments. You can read the Qt documentation for available expressions:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.qt.io/qt-5/qdate.html#toString" target="_blank">Date Format&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://doc.qt.io/qt-5/qtime.html#toString" target="_blank">Time Format&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cf-tool">CF Tool&lt;/h2>
&lt;p>You can use &lt;a href="https://github.com/xalanq/cf-tool/" target="_blank">CF Tool&lt;/a> to submit your solutions to &lt;a href="https://codeforces.com" target="_blank">Codeforces&lt;/a>.&lt;/p>
&lt;p>To submit a solution, you have to either parse a problem by &lt;a href="#competitive-companion">Competitive Companion&lt;/a> from Codeforces, or manually set the problem URL of a tab in the context menu of it.&lt;/p>
&lt;p>&lt;strong>See also&lt;/strong> &lt;a href="../../setup#setup-cf-tool">Setup CF Tool&lt;/a>.&lt;/p>
&lt;h3 id="path-1">Path&lt;/h3>
&lt;p>The path to the &lt;code>cf&lt;/code> executable file, or simply &lt;code>cf&lt;/code> if it&amp;rsquo;s in the &lt;code>PATH&lt;/code> environment variable.&lt;/p>
&lt;h3 id="show-toast-messages-for-submission-verdicts">Show toast messages for submission verdicts&lt;/h3>
&lt;p>Show a toast message when the verdict of a submission is determined.&lt;/p>
&lt;p>A toast message is a &amp;ldquo;system notification&amp;rdquo;, which is visible outside of CP Editor.&lt;/p>
&lt;p>This is useful if you want to get the verdict of the previous problem when reading/solving the next problem.&lt;/p></description></item><item><title>Docs: File Path</title><link>/zh/docs/preferences/file-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/file-path/</guid><description>
&lt;h2 id="testcases">Testcases&lt;/h2>
&lt;h3 id="input-file-save-path--answer-file-save-path">Input File Save Path &amp;amp; Answer File Save Path&lt;/h3>
&lt;p>The path where the test cases are &lt;a href="../actions#save-testcases-on-save">saved&lt;/a>. If it is a relative path, it is relative to the source file.&lt;/p>
&lt;p>You can use the following place holders:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${filename}&lt;/code>: the complete file name&lt;/li>
&lt;li>&lt;code>${basename}&lt;/code>: the base file name without the suffix&lt;/li>
&lt;li>&lt;code>${0-index}&lt;/code>: the index of the test case started from 0&lt;/li>
&lt;li>&lt;code>${1-index}&lt;/code>: the index of the test case started from 1&lt;/li>
&lt;/ul>
&lt;p>For example, a test case is the 3-rd test case of the source file &lt;code>/a/b/c.cpp&lt;/code>, the place holders are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${filename}&lt;/code>: &lt;code>c.cpp&lt;/code>&lt;/li>
&lt;li>&lt;code>${basename}&lt;/code>: &lt;code>c&lt;/code>&lt;/li>
&lt;li>&lt;code>${0-index}&lt;/code>: &lt;code>2&lt;/code>&lt;/li>
&lt;li>&lt;code>${1-index}&lt;/code>: &lt;code>3&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>If the path is &lt;code>testcases/${basename}-${1-index}.in&lt;/code>, the input of this test case will be saved in &lt;code>/a/b/testcases/c-3.in&lt;/code>.&lt;/p>
&lt;h3 id="testcases-matching-rules">Testcases Matching Rules&lt;/h3>
&lt;p>The rules used to match test cases when loading pairs of test cases.&lt;/p>
&lt;p>Each rule is a pair of &lt;a href="../general#regular-expression">regular expression patterns&lt;/a>. The first regex matches the whole input file name, and the second pattern is a replacement pattern which is the name of the answer file.&lt;/p>
&lt;p>For example, you can use &lt;code>(.+)\.in&lt;/code> and &lt;code>\1.out&lt;/code> to match &lt;code>test-1.in&lt;/code> and &lt;code>test-1.out&lt;/code>, or use &lt;code>(.+)\.in\.(\d+)&lt;/code> and &lt;code>\1.ans.\2&lt;/code> to match &lt;code>test.in.3&lt;/code> and &lt;code>test.ans.3&lt;/code>.&lt;/p>
&lt;p>When loading pairs of test cases, each rule which matches an input file will be used to try to find the corresponding answer file to the input file.&lt;/p>
&lt;h2 id="problem-url">Problem URL&lt;/h2>
&lt;h3 id="default-file-path-for-problem-urls">Default File Path For Problem URLs&lt;/h3>
&lt;p>The default path when choosing where to save an untitled tab with problem URL.&lt;/p>
&lt;p>Each rule is a pair of &lt;a href="../general#regular-expression">regular expression patterns&lt;/a>. The first regex matches a part of the problem URL, and the second pattern is a replacement pattern which is the default save path.&lt;/p>
&lt;p>When saving a file with problem URL, if the problem URL matches at least one regex in the rules, the default save path will be the replacement of the first matching regex.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of a rule:&lt;/p>
&lt;p>The problem URL regex: &lt;code>codeforces.com/contest/([1-9]\d*)/problem/([A-Z][1-9]?)&lt;/code>&lt;/p>
&lt;p>The file path: &lt;code>/home/username/Codeforces/\1/\2&lt;/code>&lt;/p>
&lt;h2 id="default-paths">Default Paths&lt;/h2>
&lt;p>The default path used when the user is asked for a file path.&lt;/p>
&lt;p>There are several actions, different actions can use different default paths.&lt;/p>
&lt;p>The user can set multiple default paths, each default path has a name. A default path can be used as a place holder in the default path of an action. When the user chooses a path for an action, serveral default paths can be set to this path.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;ul>
&lt;li>The default path for the action &amp;ldquo;Save File&amp;rdquo; is &lt;code>${file}&lt;/code>, and &amp;ldquo;Save File&amp;rdquo; changes &lt;code>file&lt;/code> and &lt;code>testcase&lt;/code>.&lt;/li>
&lt;li>The default path for the action &amp;ldquo;Load Single Test Case&amp;rdquo; is &lt;code>${testcase}&lt;/code>, and &amp;ldquo;Load Single Test Case&amp;rdquo; only changes &lt;code>testcase&lt;/code>.&lt;/li>
&lt;li>At the beginning, &lt;code>file&lt;/code> is &lt;code>/a/b&lt;/code> and &lt;code>testcase&lt;/code> is &lt;code>/a/c&lt;/code>.&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>You are asked to choose the path for &amp;ldquo;Load Single Test Case&amp;rdquo;, the default path is &lt;code>/a/c&lt;/code>, and you choose &lt;code>/a/d&lt;/code> as the path. Now &lt;code>file&lt;/code> is still &lt;code>/a/b&lt;/code>, but &lt;code>testcase&lt;/code> is changed to &lt;code>/a/d&lt;/code>.&lt;/li>
&lt;li>You are asked to choose the path for &amp;ldquo;Save File&amp;rdquo;, the default path is &lt;code>/a/b&lt;/code>, and you choose &lt;code>/a/e&lt;/code> as the path. Now both &lt;code>file&lt;/code> and &lt;code>testcase&lt;/code> are &lt;code>/a/e&lt;/code>.&lt;/li>
&lt;li>You are asked to choose the path for &amp;ldquo;Load Single Test Case&amp;rdquo;, the default path is &lt;code>/a/e&lt;/code>, because &lt;code>testcase&lt;/code> was modified by choosing &lt;code>/a/e&lt;/code> for &amp;ldquo;Save File&amp;rdquo;.&lt;/li>
&lt;/ol>
&lt;p>In the preferences window, the default paths changed by an action is a comma-separated list.&lt;/p></description></item><item><title>Docs: Key Bindings</title><link>/zh/docs/preferences/key-bindings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/key-bindings/</guid><description>
&lt;p>You can set custom key bindings for many actions. You can change the key by clicking the edit and press the key you want. You can delete a custom key binding by clicking the button on the right.&lt;/p></description></item><item><title>Docs: 高级</title><link>/zh/docs/preferences/advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/advanced/</guid><description>
&lt;h2 id="更新">更新&lt;/h2>
&lt;h3 id="启动时检查更新">启动时检查更新&lt;/h3>
&lt;p>在 CP Editor 启动时，检查是否有新版本的 CP Editor。&lt;/p>
&lt;p>如果有新版本，则会弹出一个窗口询问你是否进行更新。&lt;/p>
&lt;h3 id="使用测试版本">使用测试版本&lt;/h3>
&lt;p>检查更新时，检查 Beta 版本。 Beta 版通常具有更多功能和改进，但不如稳定版稳定。&lt;/p>
&lt;h2 id="限制">限制&lt;/h2>
&lt;h3 id="默认时间限制">默认时间限制&lt;/h3>
&lt;p>执行程序的默认时间限制。&lt;/p>
&lt;p>超时的程序会被终止。&lt;/p>
&lt;h3 id="输出长度限制">输出长度限制&lt;/h3>
&lt;p>程序的最大输出字符数。&lt;/p>
&lt;p>stdout 或 stderr 过长的程序将会被终止。&lt;/p>
&lt;h3 id="输出显示长度限制">输出显示长度限制&lt;/h3>
&lt;p>会显示出来的程序输出的最大字符数。&lt;/p>
&lt;p>如果输出过长，超长部分会被省略。&lt;/p>
&lt;h3 id="消息长度限制">消息长度限制&lt;/h3>
&lt;p>主窗口右上角内每条信息的最大长度。&lt;/p>
&lt;p>超长部分将会被省略。&lt;/p>
&lt;h3 id="html-差异查看器长度限制">HTML 差异查看器长度限制&lt;/h3>
&lt;p>HTML 差异查看器中的最大字符数。&lt;/p>
&lt;p>如果输出或答案太长，差异查看器将以纯文本显示。&lt;/p>
&lt;h3 id="打开文件长度限制">打开文件长度限制&lt;/h3>
&lt;p>允许打开的文件的最大字符数。&lt;/p>
&lt;p>如果文件超长，将不会被打开。&lt;/p>
&lt;h3 id="显示测试用例长度限制">显示测试用例长度限制&lt;/h3>
&lt;p>会显示出来的测试用例的最大字符数。&lt;/p>
&lt;p>如果测试用例过长，超长部分会被省略，且测试用例会变得只读。&lt;/p>
&lt;h2 id="网络代理">网络代理&lt;/h2>
&lt;p>用于检查更新的代理服务器。&lt;/p></description></item><item><title>Docs: 通用</title><link>/zh/docs/preferences/general/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/docs/preferences/general/</guid><description>
&lt;h3 id="临时文件夹">临时文件夹&lt;/h3>
&lt;p>在 CP Editor 中，每个文件都有一个临时目录，可用于保存可执行文件等等。&lt;/p>
&lt;p>你可以将其视为一个能够安全地为每个标签页（即每个文件）保存内容而不影响磁盘上其他文件的地方，并且在关闭标签页时它会被自动删除。&lt;/p>
&lt;p>在 Linux 上，它位于 &lt;code>/tmp/CP Editor-XXXXXX&lt;/code>。在 Windows 上，它位于 &lt;code>C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Temp\CP Editor-XXXXXX&lt;/code>。&lt;/p>
&lt;h3 id="正则表达式">正则表达式&lt;/h3>
&lt;p>&lt;a href="https://baike.baidu.com/item/%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f" target="_blank">正则表达式&lt;/a> 用于匹配字符串中的模式以及查找和替换子字符串。&lt;/p>
&lt;p>你可以找到许多在线正则表达式课程，例如：&lt;a href="https://deerchao.cn/tutorials/regex/regex.htm" target="_blank">正则表达式30分钟入门教程&lt;/a>。.&lt;/p>
&lt;p>在 CP Editor 中，你可以使用 &lt;code>\1&lt;/code>, &lt;code>\2&lt;/code> 等用于替换模式中的第一个/第二个捕获组的内容。&lt;/p></description></item></channel></rss>